class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        vector<vector<int>> ans;
        
        if(nums.size()<3 || nums.empty())
            return ans;
        
        sort(nums.begin(), nums.end());
        
        for(int i = 0; i<nums.size(); i++)
        {
            int target = -nums[i];
            int front = i+1;
            int rear = nums.size() - 1;
            
            while(front < rear)
            {
                int sum = nums[front] + nums[rear];
                
                if(sum<target)
                    front++;
                else if(sum>target)
                    rear--;
                else
                {
                    vector<int> temp;
                    temp.push_back(nums[i]);
                    temp.push_back(nums[front]);
                    temp.push_back(nums[rear]);
                    
                    ans.push_back(temp);
                    
                    while(front < rear && nums[front] == temp[1])
                        front++;
                    while(front<rear && nums[rear] == temp[2])
                        rear--;
                    
                }
                
                while(i+1<nums.size() && nums[i] == nums[i+1])
                    i++;
            }
        }
        
        return ans;
    }
};
